import { ReactNode } from "react";

import { motion } from "framer-motion";

import styles from "./CardIcons.module.css";

export type HeartIconProps = {
  children: ReactNode;
  percentage: number;
  id: string;
  stroke?: string;
  size?: number;
};

export type PowerIconProps = {
  id: string;
  used: number;
  stroke?: string;
  size?: number;
};

export type BasicIconProps = {
  stroke?: string;
  size: number;
};

export function SwordIcon({ id, used, stroke, size }: PowerIconProps) {
  return (
    <svg
      viewBox="0 0 510.31 510.3"
      className={styles.svg}
      style={{ width: size, height: size }}
    >
      <linearGradient id={`swordgradient${id}`} gradientTransform="rotate(90)">
        <stop offset={`${used}%`} stopColor="white" stopOpacity=".5" />
        <stop offset={`${used}%`} stopColor="#0A6EBD" />
      </linearGradient>

      <motion.path
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        fill={`url('#swordgradient${id}')`}
        stroke={stroke || "white"}
        strokeWidth={10}
        transition={{
          duration: 1,
          type: "tween",
          ease: "easeOut",
          delay: 0.5,
        }}
        d="M504.06,443.728c-8.341-8.341-21.845-8.341-30.165,0h-0.021L412.946,382.8c20.096-23.915,34.731-50.389,36.928-72.768
          c1.131-11.733-7.424-22.165-19.157-23.317c-11.925-1.195-22.165,7.445-23.317,19.157c-0.256,2.773-1.067,5.803-2.091,8.917
          l-59.648-59.627l128.235-128.235c2.325-2.347,4.096-5.205,5.141-8.341l30.165-90.496c2.56-7.68,0.555-16.128-5.141-21.845
          c-5.717-5.717-14.187-7.701-21.845-5.141L391.719,31.27c-3.136,1.045-5.995,2.816-8.341,5.163L255.143,164.646L126.93,36.432
          c-2.325-2.347-5.184-4.117-8.341-5.163L28.092,1.104c-7.616-2.56-16.128-0.597-21.824,5.141
          c-5.717,5.717-7.723,14.165-5.163,21.845l30.165,90.496c1.045,3.136,2.816,5.995,5.163,8.341l128.213,128.213l-59.904,59.925
          c-0.917-2.965-1.621-5.824-1.771-8.405c-0.704-11.755-10.88-20.693-22.592-20.011c-11.776,0.725-20.693,10.837-19.989,22.592
          c1.344,22.251,16.149,49.237,36.864,73.643l-60.821,60.843c-8.341-8.341-21.845-8.341-30.165,0c-8.341,8.32-8.341,21.824,0,30.165
          l30.165,30.165c4.16,4.16,9.621,6.251,15.083,6.251s10.901-2.091,15.083-6.251c8.32-8.341,8.32-21.845,0-30.165l60.907-60.928
          c23.915,20.096,50.411,34.709,72.789,36.885c0.725,0.085,1.408,0.107,2.091,0.107c10.859,0,20.139-8.235,21.205-19.264
          c1.152-11.712-7.445-22.165-19.157-23.296c-2.773-0.277-5.803-1.067-8.917-2.112l59.648-59.627l59.904,59.904
          c-2.965,0.917-5.824,1.621-8.405,1.771c-11.776,0.704-20.715,10.816-20.011,22.592c0.683,11.307,10.091,20.032,21.269,20.032
          c0.448,0,0.875,0,1.323-0.043c22.251-1.344,49.216-16.149,73.621-36.864l60.843,60.843c-8.32,8.32-8.32,21.824,0,30.165
          c4.181,4.16,9.643,6.251,15.104,6.251c5.44,0,10.901-2.091,15.083-6.251l30.165-30.165
          C512.38,465.552,512.38,452.048,504.06,443.728z M157.927,382.544c-5.653-4.587-11.2-9.557-16.448-14.784
          c-0.149-0.149-0.299-0.32-0.448-0.469c-4.715-4.736-9.237-9.728-13.419-14.784l67.2-67.179l30.187,30.165L157.927,382.544z
           M298.194,207.696l-12.864-12.885L409.98,70.16l45.269-15.083l-15.104,45.248L315.495,224.998L298.194,207.696z"
      />
    </svg>
  );
}

export function SpecialPowerIcon({ id, used, stroke, size }: PowerIconProps) {
  return (
    <svg
      viewBox="0 -0.5 17 17"
      className={styles.svg}
      style={{ width: size, height: size }}
    >
      <linearGradient id={`spicongradient${id}`} gradientTransform="rotate(90)">
        <stop offset={`${used}%`} stopColor="white" stopOpacity=".5" />
        <stop offset={`${used}%`} stopColor="#32CD32" />
      </linearGradient>

      <motion.path
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        fill={`url('#spicongradient${id}')`}
        stroke={stroke || "white"}
        strokeWidth={0.5}
        transition={{
          duration: 1,
          type: "tween",
          ease: "easeOut",
          delay: 0.5,
        }}
        d="M14.289,0.023 L6.925,0 L2.984,8 L8,8 L3.666,15.916 L14.924,4.941 L10.35,4.941 L14.289,0.023"
      />
    </svg>
  );
}

export function HeartIcon({
  children,
  percentage,
  id,
  stroke,
  size,
}: HeartIconProps) {
  return (
    <div
      style={{
        position: "relative",
        alignItems: "center",
        display: "flex",
        width: size,
        height: size,
      }}
    >
      <svg viewBox="0 0 24 24" className={styles.svg}>
        <linearGradient id={`gradient${id}`} gradientTransform="rotate(90)">
          <stop offset={`${percentage}%`} stopColor="white" stopOpacity=".5" />
          <stop offset={`${percentage}%`} stopColor="red" />
        </linearGradient>

        <motion.path
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
          fill={`url('#gradient${id}')`}
          stroke={stroke || "white"}
          strokeWidth={0.6}
          transition={{
            duration: 1,
            type: "tween",
            ease: "easeOut",
            delay: 0.5,
          }}
          d="M14 20.408c-.492.308-.903.546-1.192.709-.153.086-.308.17-.463.252h-.002a.75.75 0 01-.686 0 16.709 16.709 0 01-.465-.252 31.147 31.147 0 01-4.803-3.34C3.8 15.572 1 12.331 1 8.513 1 5.052 3.829 2.5 6.736 2.5 9.03 2.5 10.881 3.726 12 5.605 13.12 3.726 14.97 2.5 17.264 2.5 20.17 2.5 23 5.052 23 8.514c0 3.818-2.801 7.06-5.389 9.262A31.146 31.146 0 0114 20.408z"
        />
      </svg>
      {children}
    </div>
  );
}

export function SkipIcon({ stroke, size }: BasicIconProps) {
  return (
    <svg
      viewBox="0 0 362.618 362.618"
      className={styles.svg}
      style={{ width: size, height: size }}
    >
      <motion.path
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        stroke={stroke || "white"}
        fill="#CCCC00"
        strokeWidth={8}
        transition={{
          duration: 1,
          type: "tween",
          ease: "easeOut",
          delay: 0.5,
        }}
        d="M332.5,43.58c-7.824-8.407-23.227-8.953-31.645-1.078l-16.777,15.681c-4.023,3.732-6.504,8.908-6.978,14.388l-7.987,7.473
        c-4.815,4.479-6.419,11.283-4.305,17.333c-3.951,4.5-8.106,8.416-12.376,12.352c-16.039,14.832-31.188,28.838-11.697,63.912
        c7.277,14.544,16.903,24.728,26.229,34.575c15.15,16.015,27.124,28.655,25.827,55.856c-1.676,31.189-24.104,59.094-57.1,71.085
        c-23.803,8.671-48.432,6.575-64.849-5.41c11.998-7.818,21.92-15.276,28.436-20.435c26.979-21.911,25.034-42.021,21.473-52.056
        c-6.083-17.107-26.103-30.023-46.576-30.023c-12.79,0-23.944,5.008-31.438,14.087c-10.034,12.19-12.907,31.026-8.313,54.481
        c2.36,11.817,6.677,22.193,12.832,30.913c-34.065,19.563-61.078,25.755-76.345,17.204c-12.076-6.768-18.195-23.449-18.195-49.582
        c0-28.775,16.475-43.253,35.542-60.03c11.454-10.069,23.29-20.476,32.282-34.87c30.129-49.488,21.98-92.59-25.667-135.414
        c2.33-5.804,1.189-12.628-3.191-17.327L84.5,38.993c0.033-5.681-2.096-11.202-6.002-15.366L62.831,6.833
        c-8.109-8.671-23.017-9.157-31.642-1.075c-4.372,4.095-6.894,9.641-7.095,15.619c-0.198,5.975,1.949,11.676,6.032,16.042
        l15.667,16.786c3.756,4.021,8.923,6.503,14.381,6.959l7.479,7.999c3.997,4.27,10.28,6.106,15.883,4.723
        c42.55,37.644,50.26,75.117,24.332,117.732c-7.803,12.467-18.834,22.164-29.505,31.556c-19.938,17.54-40.55,35.663-40.55,71.175
        c0,31.934,8.683,52.992,25.818,62.606c6.729,3.747,14.696,5.662,23.668,5.662c18.891,0,42.49-8.263,70.16-24.554
        c20.377,18.045,52.515,22.326,83.314,11.127c38.635-14.033,64.911-47.138,66.917-84.35c1.598-33.608-14.411-50.518-29.946-66.941
        c-8.557-9.037-17.383-18.38-23.814-31.207c-13.938-25.112-6.863-31.654,8.652-46c4.228-3.906,8.665-8.098,12.977-12.938
        c5.537,1.696,11.848,0.234,16.009-3.684l7.698-7.182h0.108c5.704,0,11.127-2.123,15.258-5.99l16.796-15.69
        c4.371-4.083,6.894-9.611,7.098-15.589C338.722,53.638,336.584,47.952,332.5,43.58z M174.181,242.167
        c14.468,0,28.442,8.629,32.513,20.08c3.879,10.935-2.078,23.539-16.732,35.435c-6.759,5.344-17.249,13.21-29.916,21.317
        c-5.251-7.141-8.941-15.896-10.983-26.079c-3.714-18.909-1.918-33.471,5.197-42.112
        C158.854,245.236,165.931,242.167,174.181,242.167z"
      />
    </svg>
  );
}
